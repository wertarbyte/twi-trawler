TWI trawler

- an ATTiny2313 based controller for Fischertechnik motors -

== Introduction ==

This software package enables an ATTiny2313 in conjunction with an L293D to
manage the movement of various motors (e.g. the ones used by Fischertechnik).
Movement instructions are transferred using TWI/I²C, while signals from end
switches and positional encoders are monitored by the µC autonomously.

The TWI address of the chip is 0x08 (~0xF7 as in "roughly Fischter7echnik").
If PD6 is pulled to GND, the lowest bit is set as well and the address changes
to 0x09.

== Wiring instructions and pinout ==

ATTiny2313
    
                     _______
               RST -|1  V 20|- VCC
     DIR_B_R---PD0 -|2    19|- PB7 (SCL)---
     DIR_B_L---PD1 -|3    18|-
                   -|4    17|- PB5 (SDA)---
                   -|5    16|- PB4---SW_A
ENC_A---(INT0) PD2 -|6    15|- PB3---SW_B
ENC_B---(INT1) PD3 -|7    14|- PB2 (OC0A)---PWM_A
                   -|8    13|- PB1---DIR_A_R
PWM_B---(OC0B) PD5 -|9    12|- PB0---DIR_A_L
               GND -|10   11|- PD6---TWI address 0x01 if GND
                    '-------'


L293D
                     _______
           PWM_A ---|1  V 16|- VCC (5V)
         DIR_A_R ---|2    15|- DIR_B_R
      .-------------|3    14|-------------.
      |        GND -|4    13|- GND      (M_B)
    (M_A)      GND -|5    12|- GND        |
      '-------------|6    11|-------------'
         DIR_A_L ---|7    10|--- DIR_B_L
         VCCm (9V) -|8     9|--- PWM_B
                    '-------'

== Usage examples ==

To control a motor (M_A) that does not provide an encoder signal but travels
between two switches, connect the switch at the zero position to SW_A and the
switch at the end of the movement path to ENC_A. Both inputs use internal
pullups, so the switch has to make contact with GND once it is pressed.

To initialize the motor, send the folowing commands as outlined in »cmds.h«.
The first byte transferred to the controller specifies the command issued as
well as the motor output; with the LSB set to 0x01, the command refers to motor
B, otherwise motor A is affected.

Set mode of motor A to MOTOR_MODE_BOUNDED (traveling between two switches, no
encoder signal):

  CMD_ADDR_MODE | 0x00			(0x10)
  MOTOR_MODE_BOUNDED			(0x02)

Start calibration and move motor to position 0:

  CMD_ADDR_CALIB | 0x00			(0x60)

To move the motor from one position to the other, use the special positions
POS_MAX and POS_MIN and send the 2 bytes of the target position after invoking
the "GOTO" command:

  CMD_ADDR_GOTO | 0x00			(0x40)
  POS_MAX & 0xFF			(0xFE)
  (POS_MAX>>8) & 0xFF			(0xFF)

The motor now starts moving towards the target position; once the target
position has been reached, the following read request returns a non-zero value:

  CMD_ADDR_TARGET_REACHED | 0x00	(0x80)



To control a motor (M_B) with an encoder signal, simply connect the signal wire
to ENC_B and the switch at the base position to SW_B.

The commands used for initialization are as follows:

Set the motor controller mode to MOTOR_MODE_ENCODER:

  CMD_ADDR_MODE | 0x01			(0x11)
  MOTOR_MODE_ENCODER			(0x03)

Start calibration and move the motor to position 0:

  CMD_ADDR_CALIB | 0x01			(0x61)

Afterwards, the motor can be instructed to move to any target position between POS_MIN and POS_MAX, e.g. pos = 0x1337:

  CMD_ADDR_GOTO | 0x01			(0x41)
  pos & 0xFF				(0x37)
  (pos>>8) & 0xFF			(0x13)

If the position has been stable for 300ms within a tolerance window around the
target position, movement ceases and a read request to CMD_ADDR_TARGET_REACHED
acknowledges completion by returning a non-zero value:

  CMD_ADDR_TARGET_REACHED | 0x01	(0x81)

The actual position can be read by using the command CMD_ADDR_POS; unless a
calibration has occured, POS_UNKNOWN (0xFFFF) is returned. Motors using
MOTOR_MODE_BOUNDED report POS_TRANSIT (POS_MAX/2) while not residing at POS_MIN
or POS_MAX.

The default position tolerance is 5; it can be raised or lowered depending on
the requirements of the application (e.g. to tol = 2):

  CMD_ADDR_POS_TOLERANCE | 0x01		(0x91)
  tol					(0x02)

Note that lower values might lead to excessive recorrections in the target
vicinity.
